/***************************************************************************
                          kmouth.h  -  description
                             -------------------
    begin                : Mon Aug 26 15:41:23 CEST 2002
    copyright            : (C) 2002 by Gunnar Schmi Dt
    email                : kmouth@schmi-dt.de
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/

// $Id$

#ifndef KMOUTH_H
#define KMOUTH_H
 

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

// include files for Qt

// include files for KDE 
#include <kapp.h>
#include <kmainwindow.h>
#include <kaccel.h>
#include <kaction.h>
#include <kurl.h>

// forward declaration of the KMouth classes
class PhraseList;
class OptionsDialog;
class TextToSpeechSystem;
class PhraseBookDialog;
class PhraseBook;

/**
  * The base class for KMouth application windows. It sets up the main
  * window and reads the config file as well as providing a menubar, toolbar
  * and statusbar.
  * KMouthApp reimplements the methods that KMainWindow provides for main window handling and supports
  * full session management as well as using KActions.
  * @see KMainWindow
  * @see KApplication
  * @see KConfig
  *
  * @author Source Framework Automatically Generated by KDevelop, (c) The KDevelop Team.
  * @version KDevelop version 1.2 code generation
  */
class KMouthApp : public KMainWindow
{
  Q_OBJECT

  public:
    /** construtor of KMouthApp, calls all init functions to create the application.
     */
    KMouthApp(QWidget* parent=0, const char* name=0);
    ~KMouthApp();
    /** Returns true if the configuration wizard was not needed or when it
     * was successfully completed.
     */
    bool configured();
    /** opens a file specified by commandline option
     */
    void openDocumentFile(const KURL& url=0);

    TextToSpeechSystem *getTTSSystem() const;

    /** called by PhraseList in order to enable or disable the actions depending
     * on the contents of the phrase list.
     */
    void enableMenuEntries(bool existSelectedEntries, bool existDeselectedEntries);

  protected:
    /** save general Options like all bar positions and status as well as the geometry and the recent file list to the configuration
     * file
     */ 	
    void saveOptions();
    /** read general Options again and initialize all variables like the recent file list
     */
    void readOptions();
    /** initializes the phrase list */
    void initPhraseList();
    /** initializes the KActions of the application */
    void initActions();
    /** sets up the statusbar for the main window by initialzing a statuslabel.
     */
    void initStatusBar();
    /** queryClose is called by KTMainWindow on each closeEvent of a window. Against the
     * default implementation (only returns true), this calles saveModified() on the document object to ask if the document shall
     * be saved if Modified; on cancel the closeEvent is rejected.
     * @see KTMainWindow#queryClose
     * @see KTMainWindow#closeEvent
     */
    virtual bool queryClose();
    /** queryExit is called by KTMainWindow when the last window of the application is going to be closed during the closeEvent().
     * Against the default implementation that just returns true, this calls saveOptions() to save the settings of the last window's	
     * properties.
     * @see KTMainWindow#queryExit
     * @see KTMainWindow#closeEvent
     */
    virtual bool queryExit();

  public slots:
    /** open a file and load it into the history */
    void slotFileOpen();
    /** save a document */
    void slotFileSaveAs();
    /** print the actual file */
    void slotFilePrint();
    /** closes all open windows by calling close() on each memberList item until the list is empty, then quits the application.
     * If queryClose() returns false because the user canceled the saveModified() dialog, the closing breaks.
     */
    void slotFileQuit();
    /** edits the phrase books
     */
    void slotEditPhrasebook ();
    /** toggles the toolbar
     */
    void slotViewToolBar();
    /** toggles the statusbar
     */
    void slotViewStatusBar();
    /** configures the TTS system
     */
    void slotConfigureTTS();
    /** changes the statusbar contents for the standard label permanently, used to indicate current actions.
     * @param text the text that is displayed in the statusbar
     */
    void slotStatusMsg(const QString &text);

    void slotPhrasebookConfirmed (PhraseBook &book);

    void slotConfigurationChanged();

    void slotPhraseSelected (const QString &phrase);

  private:
    bool isConfigured;
    /** the configuration object of the application */
    KConfig *config;
    /** The phrase list */
    PhraseList *phraseList;
    /** The configuration dialog */
    OptionsDialog *optionsDialog;

    // KAction pointers to enable/disable actions
    KAction* fileOpen;
    KAction* fileSaveAs;
    KAction* filePrint;
    KAction* fileQuit;
    
    KAction* editCut;
    KAction* editCopy;
    KAction* editPaste;
    KAction* editSpeak;

    KActionCollection *phrases;
    KAction* phrasebookEdit;

    KToggleAction* viewToolBar;
    KToggleAction* viewStatusBar;
    KAction*       configureTTS;

    KAction* phraseListSpeak;
    KAction* phraseListRemove;
    KAction* phraseListCut;
    KAction* phraseListCopy;
    KAction* phraselistSelectAll;
    KAction* phraselistDeselectAll;
};
 
#endif // KMOUTH_H

/*
 * $Log$
 * Revision 1.18  2002/12/30 12:08:07  gunnar
 * Configuration wizard improved
 *
 * Revision 1.17  2002/11/22 08:48:34  gunnar
 * Implemented functionality that belongs to the new options in the options dialog
 *
 * Revision 1.16  2002/11/21 21:33:26  gunnar
 * Extended parameter dialog and added wizard for the first start
 *
 * Revision 1.15  2002/11/11 21:25:42  gunnar
 * Moved the parts concerning phrase books into a static library
 *
 * Revision 1.14  2002/11/06 19:15:08  gunnar
 * import of standard phrase books added
 *
 * Revision 1.13  2002/10/29 16:16:05  gunnar
 * Connection from the phrase book to the phrase edit field added
 *
 * Revision 1.12  2002/10/23 22:19:29  gunnar
 * Cut, copy and paste features of the phrase book edit dialog improved
 *
 * Revision 1.11  2002/10/23 17:42:52  gunnar
 * Icons added to the items of the phrase book edit dialog
 *
 * Revision 1.10  2002/10/22 16:13:24  gunnar
 * Popup menu in the phrase book dialog added
 *
 * Revision 1.9  2002/10/21 18:30:50  gunnar
 * First version of the phrase book edit dialog added
 *
 * Revision 1.8  2002/09/26 17:10:46  gunnar
 * Several small changes
 *
 * Revision 1.7  2002/09/18 09:30:40  gunnar
 * A nuber of small changes
 *
 * Revision 1.6  2002/09/13 09:40:37  gunnar
 * Added support for opening a file as history
 *
 * Revision 1.5  2002/09/12 15:28:09  gunnar
 * Loading (into the edit line) and saving (the phrase list) implemented
 *
 * Revision 1.4  2002/09/11 16:57:35  gunnar
 * added context menu, and moved the contents of KMouthView and KMouthDoc into a new class PhraseList
 *
 * Revision 1.3  2002/09/08 17:12:55  gunnar
 * Configuration dialog added
 *
 * Revision 1.2  2002/09/01 08:32:54  gunnar
 * toolbar icon and application icon added
 *
 * Revision 1.1.1.1  2002/08/26 14:09:49  gunnar
 * New project started
 *
 */
